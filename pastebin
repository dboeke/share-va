set local search_path to schema_turbot;

drop trigger control_category_path_au on schema_turbot.control_categories;
drop trigger control_resource_category_path_au on schema_turbot.resource_categories;
drop trigger control_resource_types_path_au on schema_turbot.resource_types;
drop trigger control_types_path_au on schema_turbot.control_types;
drop trigger policy_category_path_au on schema_turbot.control_categories;
drop trigger policy_resource_category_path_au on schema_turbot.resource_categories;
drop trigger policy_resource_types_path_au on schema_turbot.resource_types;
drop trigger policy_types_path_au on schema_turbot.policy_types;
drop trigger resource_resource_category_path_au on schema_turbot.resource_categories;
drop trigger resource_resource_type_path_au on schema_turbot.resource_types;
drop trigger resource_types_500_rt_path_update_au on schema_turbot.resource_types;
drop trigger resources_update_to_deactivate_grants_au on schema_turbot.resources;

Based on the current minor DB Version, use the below for the upgrade path.
  Since, we are on 11.10 we will go to 12.6 and then to 13.3 (Technically, it is possible to go from 11.10 to 13.1 directly but taking the safe route)
https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.PostgreSQL.html#USER_UpgradeDBInstance.PostgreSQL.MajorVersion
Go to Service Catalog> TED.
    Updating ted with Allow major version upgrade from false to true.
Service Catalog > TED, Upgrade the following:
    - parameter grop family to postgres12
    - version from 11.10 to 12.6
    - Database - Advanced - Parameters to use Parameter group HiveParamGroup12.
Repeat the above step again from 12.6 to 13.3

Create triggers
set local search_path to schema_turbot;
create trigger control_category_path_au after update on schema_turbot.control_categories for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('controls', 'control_category_id', 'control_category_path');
create trigger control_resource_category_path_au after update on schema_turbot.resource_categories  for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('controls', 'resource_category_id', 'resource_category_path');
create trigger control_resource_types_path_au after update on schema_turbot.resource_types for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('controls', 'resource_type_id', 'resource_type_path');
create trigger control_types_path_au after update on schema_turbot.control_types for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('controls', 'control_type_id', 'control_type_path');
create trigger policy_category_path_au after update on schema_turbot.control_categories  for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('policy_values', 'control_category_id', 'control_category_path');
create trigger policy_resource_category_path_au after update on schema_turbot.resource_categories  for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('policy_values', 'resource_category_id', 'resource_category_path');
create trigger policy_resource_types_path_au after update on schema_turbot.resource_types for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('policy_values', 'resource_type_id', 'resource_type_path');
create trigger policy_types_path_au after update on schema_turbot.policy_types for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('policy_values', 'policy_type_id', 'policy_type_path');
create trigger resource_resource_category_path_au after update on schema_turbot.resource_categories for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('resources', 'resource_category_id', 'resource_category_path');
create trigger resource_resource_type_path_au after update on schema_turbot.resource_types for each row when (old.path is distinct from new.path) execute procedure schema_turbot.types_path_au('resources', 'resource_type_id', 'resource_type_path');
create trigger resource_types_500_rt_path_update_au after update on schema_turbot.resource_types for each row when (old.path is distinct from new.path) execute procedure schema_turbot.update_types_path();
create trigger resources_update_to_deactivate_grants_au after update on schema_turbot.resources for each row when (old.path is distinct from new.path or old.parent_id is distinct from new.parent_id) execute procedure schema_turbot.resources_hierarchy_deactivate_grants_au();
Upgrade the extensions

ALTER EXTENSION hstore UPDATE TO '1.7';

ALTER EXTENSION ltree UPDATE TO '1.2';

ALTER EXTENSION plv8 UPDATE TO '2.3.15';

ALTER EXTENSION pg_trgm UPDATE TO '1.5';
